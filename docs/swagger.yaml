basePath: /
definitions:
  handlers.clientRequest:
    properties:
      address:
        type: string
      email:
        type: string
      name:
        type: string
      phone:
        type: string
    required:
    - address
    - email
    - name
    - phone
    type: object
  handlers.invoiceItemReq:
    properties:
      description:
        type: string
      quantity:
        minimum: 1
        type: integer
      unit_price:
        description: Ensure unit price is greater than 0
        type: number
    required:
    - description
    - quantity
    - unit_price
    type: object
  handlers.invoicePublicReq:
    properties:
      delivery_fee:
        type: number
      due_date:
        type: string
      invoice_number:
        type: string
      issue_date:
        type: string
      items:
        items:
          $ref: '#/definitions/handlers.invoiceItemReq'
        type: array
      notes:
        type: string
      recipient:
        $ref: '#/definitions/handlers.senderRecipientRequest'
      sender:
        $ref: '#/definitions/handlers.senderRequest'
      tax_rate:
        type: number
    required:
    - due_date
    - invoice_number
    - issue_date
    - recipient
    - sender
    type: object
  handlers.invoiceReq:
    properties:
      client_address:
        type: string
      client_email:
        type: string
      client_id:
        type: integer
      client_name:
        type: string
      client_phone:
        type: string
      delivery_fee:
        type: number
      due_date:
        type: string
      invoice_number:
        type: string
      issue_date:
        type: string
      items:
        items:
          $ref: '#/definitions/handlers.invoiceItemReq'
        type: array
      notes:
        type: string
      tax_rate:
        type: number
    required:
    - due_date
    - invoice_number
    - issue_date
    - items
    type: object
  handlers.refreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  handlers.senderRecipientRequest:
    properties:
      address:
        type: string
      email:
        type: string
      name:
        type: string
      phone:
        type: string
    required:
    - address
    - name
    type: object
  handlers.senderRequest:
    properties:
      address:
        type: string
      bank_account_name:
        type: string
      bank_account_number:
        type: string
      bank_name:
        type: string
      email:
        type: string
      name:
        type: string
      phone:
        type: string
    required:
    - address
    - bank_account_name
    - bank_account_number
    - bank_name
    - name
    type: object
  handlers.signInRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handlers.signUpRequest:
    properties:
      address:
        type: string
      bank_account_name:
        type: string
      bank_account_number:
        type: string
      bank_name:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
      phone:
        type: string
    required:
    - address
    - bank_account_name
    - bank_account_number
    - bank_name
    - email
    - name
    - password
    - phone
    type: object
  handlers.statusReq:
    properties:
      status:
        enum:
        - DRAFT
        - SENT
        - PAID
        type: string
    required:
    - status
    type: object
  handlers.updateBankingRequest:
    properties:
      bank_account_name:
        type: string
      bank_account_number:
        type: string
      bank_name:
        type: string
    required:
    - bank_account_name
    - bank_account_number
    - bank_name
    type: object
  handlers.updatePasswordRequest:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    required:
    - new_password
    - old_password
    type: object
  handlers.updateProfileRequest:
    properties:
      address:
        type: string
      email:
        type: string
      name:
        type: string
      phone:
        type: string
    required:
    - address
    - email
    - name
    - phone
    type: object
  response.GenericResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: API documentation for your invoice app.
  title: Go Invoice API
  version: "1.0"
paths:
  /v1/protected/auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Refresh access token with refresh token
      parameters:
      - description: Refresh Token Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.refreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      summary: Refresh Token
      tags:
      - Auth
  /v1/protected/clients:
    get:
      consumes:
      - application/json
      description: Get all clients
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Page Size
        in: query
        name: page_size
        type: integer
      - description: Search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      security:
      - BearerAuth: []
      summary: Get All Clients
      tags:
      - Client
    post:
      consumes:
      - application/json
      description: Create a new client
      parameters:
      - description: Client Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.clientRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      security:
      - BearerAuth: []
      summary: Create Client
      tags:
      - Client
  /v1/protected/clients/{id}:
    delete:
      consumes:
      - application/json
      description: Delete client by id
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      security:
      - BearerAuth: []
      summary: Delete Client
      tags:
      - Client
    get:
      consumes:
      - application/json
      description: Get client by id
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      security:
      - BearerAuth: []
      summary: Get Client By ID
      tags:
      - Client
    put:
      consumes:
      - application/json
      description: Update client by id
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Client Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.clientRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      security:
      - BearerAuth: []
      summary: Update Client
      tags:
      - Client
  /v1/protected/invoices:
    get:
      consumes:
      - application/json
      description: List invoices by user id
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Page Size
        in: query
        name: page_size
        type: integer
      - description: Status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      security:
      - BearerAuth: []
      summary: List Invoices By User ID
      tags:
      - Invoice
    post:
      consumes:
      - application/json
      description: Create a new invoice
      parameters:
      - description: Invoice Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.invoiceReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      security:
      - BearerAuth: []
      summary: Create Invoice
      tags:
      - Invoice
  /v1/protected/invoices/{id}:
    delete:
      consumes:
      - application/json
      description: Delete invoice by id
      parameters:
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      security:
      - BearerAuth: []
      summary: Delete Invoice
      tags:
      - Invoice
    get:
      consumes:
      - application/json
      description: Get invoice by id
      parameters:
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      security:
      - BearerAuth: []
      summary: Get Invoice By ID
      tags:
      - Invoice
    put:
      consumes:
      - application/json
      description: Update invoice by id
      parameters:
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: integer
      - description: Invoice Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.invoiceReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      security:
      - BearerAuth: []
      summary: Update Invoice
      tags:
      - Invoice
  /v1/protected/invoices/{id}/pdf:
    post:
      consumes:
      - application/json
      description: Download invoice pdf
      parameters:
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      security:
      - BearerAuth: []
      summary: Download Invoice PDF
      tags:
      - Invoice
  /v1/protected/invoices/{id}/status:
    patch:
      consumes:
      - application/json
      description: Update invoice status by id
      parameters:
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: integer
      - description: Invoice Status Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.statusReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      security:
      - BearerAuth: []
      summary: Update Invoice Status
      tags:
      - Invoice
  /v1/protected/invoices/summary:
    get:
      consumes:
      - application/json
      description: Invoice summary
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      security:
      - BearerAuth: []
      summary: Invoice Summary
      tags:
      - Invoice
  /v1/protected/me:
    get:
      consumes:
      - application/json
      description: Get current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      security:
      - BearerAuth: []
      summary: Me
      tags:
      - Auth
  /v1/protected/me/banking:
    put:
      consumes:
      - application/json
      description: Update current user banking
      parameters:
      - description: Update Banking Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.updateBankingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      security:
      - BearerAuth: []
      summary: Update Banking
      tags:
      - Auth
  /v1/protected/me/change-password:
    post:
      consumes:
      - application/json
      description: Change current user password
      parameters:
      - description: Update Password Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.updatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      security:
      - BearerAuth: []
      summary: Change Password
      tags:
      - Auth
  /v1/protected/me/deactivate:
    post:
      consumes:
      - application/json
      description: Deactivate current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      security:
      - BearerAuth: []
      summary: Deactivate User
      tags:
      - Auth
  /v1/protected/me/profile:
    put:
      consumes:
      - application/json
      description: Update current user profile
      parameters:
      - description: Update Profile Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.updateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      security:
      - BearerAuth: []
      summary: Update Profile
      tags:
      - Auth
  /v1/public/auth/sign-in:
    post:
      consumes:
      - application/json
      description: Sign in with email and password
      parameters:
      - description: Sign In Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.signInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      summary: Sign In
      tags:
      - Auth
  /v1/public/auth/sign-up:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Sign Up Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.signUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      summary: Sign Up
      tags:
      - Auth
  /v1/public/invoices/generate-pdf:
    post:
      consumes:
      - application/json
      description: Generate public invoice
      parameters:
      - description: Invoice Public Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.invoicePublicReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenericResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.GenericResponse'
      summary: Generate Public Invoice
      tags:
      - Invoice
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
